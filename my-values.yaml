components:
  frontendProxy:
    resources:
      limits:
        memory: 130Mi
  featureflagService:
    resources:
      limits:
        memory: 375Mi
#  frontend:
#    env:
#      - name: PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
#        value: "http://otel-demo-collector.local:4318/v1/traces"


opentelemetry-collector:
  config:
    exporters:
      otlp:
        #endpoint: demo-loadgen-chronocollector-tracing:4317
        endpoint: demo-sandbox-chronocollector-tracing:4317
        tls:
          insecure: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]


# opentelemetry-collector:
#   config:
#     exporters:
#       otlp:
#         #endpoint: demo-loadgen-chronocollector-tracing:4317
#         endpoint: demo-sandbox-chronocollector-tracing:4317
#         tls:
#           insecure: true
#       # otlpjaeger:
#       #   endpoint: "jaeger:4317"
#       #   tls:
#       #     insecure: true
#       prometheus:
#         endpoint: "c10e-otel-demo-demo-sandbox-otelcol:9464"
#         resource_to_telemetry_conversion:
#           enabled: true
#         enable_open_metrics: true

#     service:
#       pipelines:
#         traces:
#           receivers: [otlp]
#           processors: [spanmetrics, batch]
#           exporters: [otlp]
#         metrics:
#           receivers: [otlp]
#           processors: [transform, batch]
#           exporters: [prometheus]

#     receivers:
#       otlp:
#         protocols:
#           grpc:
#           http:
#             cors:
#               allowed_origins:
#                 - "http://*"
#                 - "https://*"

#     processors:
#       batch:
#       spanmetrics:
#         metrics_exporter: prometheus
#       # temporary measure until description is fixed in .NET
#       transform:
#         metric_statements:
#           - context: metric
#             statements:
#               - set(description, "Measures the duration of inbound HTTP requests") where name == "http.server.duration"

    # exporters:
    #   logging: {}
    #   otlp:
    #     endpoint: demo-loadgen-chronocollector-tracing:4317
    #     tls:
    #       insecure: true
    #   prometheus:
    #     enable_open_metrics: true
    #     endpoint: 0.0.0.0:9464
    #     resource_to_telemetry_conversion:
    #       enabled: true
    # extensions:
    #   health_check: {}
    #   memory_ballast:
    #     size_in_percentage: 40
    # processors:
    #   batch: {}
    #   memory_limiter:
    #     check_interval: 5s
    #     limit_percentage: 80
    #     spike_limit_percentage: 25
    #   spanmetrics:
    #     metrics_exporter: prometheus
    # receivers:
    #   jaeger:
    #     protocols:
    #       grpc:
    #         endpoint: 0.0.0.0:14250
    #       thrift_compact:
    #         endpoint: 0.0.0.0:6831
    #       thrift_http:
    #         endpoint: 0.0.0.0:14268
    #   otlp:
    #     protocols:
    #       grpc:
    #         endpoint: 0.0.0.0:4317
    #       http:
    #         cors:
    #           allowed_origins:
    #           - http://*
    #           - https://*
    #         endpoint: 0.0.0.0:4318
    #   prometheus:
    #     config:
    #       scrape_configs:
    #       - job_name: opentelemetry-collector
    #         scrape_interval: 10s
    #         static_configs:
    #         - targets:
    #           - ${MY_POD_IP}:8888
    #   zipkin:
    #     endpoint: 0.0.0.0:9411
    # service:
    #   extensions:
    #   - health_check
    #   - memory_ballast
    #   pipelines:
    #     logs:
    #       exporters:
    #       - logging
    #       processors:
    #       - memory_limiter
    #       - batch
    #       receivers:
    #       - otlp
    #     metrics:
    #       exporters:
    #       - prometheus
    #       - logging
    #       processors:
    #       - memory_limiter
    #       - batch
    #       receivers:
    #       - otlp
    #       - prometheus
    #     traces:
    #       exporters:
    #       - otlp
    #       processors:
    #       - batch
    #       receivers:
    #       - otlp
    #   telemetry:
    #     metrics:
    #       address: 0.0.0.0:8888